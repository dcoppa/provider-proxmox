name: telmate/proxmox
resources:
    proxmox_vm_qemu:
        subCategory: ""
        description: Creates and manages a Proxmox VM Qemu container
        name: proxmox_vm_qemu
        title: proxmox_vm_qemu
        examples:
            - name: resource-name
              manifest: |-
                {
                  "iso": "ISO file name",
                  "name": "VM-name",
                  "target_node": "Node to create the VM on"
                }
            - name: preprovision-test
              manifest: |-
                {
                  "os_type": "ubuntu",
                  "preprovision": true
                }
            - name: preprovision-test
              manifest: |-
                {
                  "connection": [
                    {
                      "host": "${self.ssh_host}",
                      "port": "${self.ssh_port}",
                      "private_key": "${self.ssh_private_key}",
                      "type": "ssh",
                      "user": "${self.ssh_user}"
                    }
                  ],
                  "os_network_config": "auto eth0\niface eth0 inet dhcp\n",
                  "os_type": "ubuntu",
                  "preprovision": true,
                  "ssh_forward_ip": "10.0.0.1",
                  "ssh_private_key": "-----BEGIN RSA PRIVATE KEY-----\nprivate ssh key terraform\n-----END RSA PRIVATE KEY-----\n",
                  "ssh_user": "terraform"
                }
            - name: resource-name
              manifest: |-
                {
                  "disk": [
                    {
                      "type": "scsi"
                    },
                    {
                      "type": "ide"
                    },
                    {
                      "type": "scsi"
                    },
                    {
                      "type": "sata"
                    }
                  ]
                }
        argumentDocs:
            additional_wait: '- (do not use, api should manage timeouts)'
            agent = 0: ) unless the installed OS contains the Agent in OS install configurations
            boot: ': a valid boot order must be specified with Network type included (eg order=net0;scsi0)'
            bridge: '- (Optional; use network.bridge instead)'
            clone_wait: '- (do not use, api should manage timeouts)'
            disk_gb: '- (Optional; use disk.size instead)'
            mac: '- (Optional; use network.macaddr instead)'
            nic: '- (Optional; use network instead)'
            preprovision: '- (do not use, provider do not fully support preprovisioning anymore)'
            storage: '- (Optional; use disk.storage instead)'
            storage_type: '- (Optional; use disk.type instead)'
            vlan: '- (Optional; use network.tag instead)'
        importStatements: []
